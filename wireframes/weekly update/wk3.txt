2hrs - I felt I knew more about Heroku than AWS for hosting so I attempted once more to get the site working on Heroku. I was unsuccessful and finally resorted to AWS.
 
5hrs - Spent time researching AWS and trying to get it to host the site. I created an AWS account and an Elastic Beanstalk environment on which to host the website. It was very difficult to get working so I spent probably have the time reviewing documentation and watching YouTube tutorials. (This series was very helpful: https://www.youtube.com/watch?v=ubCNZRNjhyo&list=PL55RiY5tL51pgPovJKg6HFMFqiGNSZtQ5&index=2). When I first tried to deploy my code to the server it would not recognize the code. After trying this several times, I deleted my environment and started over from scratch with a sample application environment. I then changed the code on this environment to mine and began to make slight progress. I could get the PHP files to echo things out onto the page, but it would not actually show the homepage I created. After what had to be at least 2 hours and a dozen deployments, I discovered if I removed all the PHP require statements out of home.php (so that it was solely HTML), the server would recognize it.  This was frustrating because it took so long to discover, and because I have not been able to identify any fix for this. I need to be able to use require statements in order to populate data on the page. The PHP controller is working fine, however. 

2hrs - Completing the CSS for the home page. Created a media query and large.css file to handle the page when the viewport is over 700px. The main difficulty was the header--getting the icons positioned correctly. I created a popout menu that appears when the hamburger icon is disabled. I currently have it set so that this only works in the small view. In the large view the menu is a static one placed under the Kosapacha name. I ran into another silly issue with this as well. I would edit the CSS, but there would be no change reflected on the page. After a good amount of time trying to figure out where I had gone wrong, I tried a different browser, which resolved the issue. I realized that the browser had cached the CSS and was not updating the new code I had entered. I cleared the cache and things resumed working properly. I've had this issue several times before. I will attempt to find a way to keep the browser from caching the CSS. In addition to the menu, I made the header sticky, so that it stays in place as the user scrolls down. I thought this was a nice addition.

1hr - Attempted to research why the require statements were not working on AWS. I revisited the project's site map. If I am not able to get the PHP working, I may have to develop a page for every single product, which would be time consuming and unreasonable. A better way would be to create a single page that is populated with data from the controller. I also tried to get in touch with the client during this time to find exactly what products we will have on the site. I have not been able to get in contact with him for the past several weeks and will need his feedback quickly, before getting too deep into the project. However, if I am not able to reach him, I will simply continue the project as planned.

Here is the link to the project. I did not make as much progress as I would have liked to this week due to my inexperience with webhosting, however I am pleased with it. I think the large view is fine, but I am especially pleased with the small view: http://kosapachaapp-env-1.eba-rzsmm823.us-east-2.elasticbeanstalk.com/ 